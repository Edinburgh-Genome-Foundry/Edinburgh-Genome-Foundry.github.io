webpackJsonp([0],[,,function(e,t,s){"use strict";var o=s(1),n=s.n(o),r=s(19),i=s(13),a=s.n(i);n.a.use(r.a),t.a=new r.a({mode:"history",routes:[{path:"/",name:"Portfolio",component:a.a}]})},function(e,t,s){s(10);var o=s(0)(s(5),s(17),null,null);e.exports=o.exports},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=s(1),n=s.n(o),r=s(3),i=s.n(r),a=s(2);new n.a({el:"#app",router:a.a,template:"<App/>",components:{App:i.a}})},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"app"}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=s(14),n=s.n(o),r=s(12),i=s.n(r);t.default={name:"hello",data:function(){return{msg:"Welcome to Your Vue.js App"}},components:{project:n.a,myfooter:i.a}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={props:{img:null,title:null,subtitle:null,source:null,docs:null,demo:null,paper:null,website:null}}},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,s){s(11);var o=s(0)(null,s(18),"data-v-fa324e66",null);e.exports=o.exports},function(e,t,s){s(8);var o=s(0)(s(6),s(15),"data-v-537c2f86",null);e.exports=o.exports},function(e,t,s){s(9);var o=s(0)(s(7),s(16),"data-v-a1f893f2",null);e.exports=o.exports},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",[s("img",{staticClass:"title-logo",attrs:{src:"/static/imgs/logos/egf-codon.svg"}}),e._m(0),e._m(1),s("p"),e._m(2),e._v(" "),s("p"),e._m(3),s("project",{attrs:{title:"EGF CUBA",subtitle:"Web Collection of Useful Biology Apps",img:"/static/imgs/logos/cuba.png",website:"http://cuba.genomefoundry.org"}},[s("div",{slot:"summary"},[e._v("Collection of publicly available one-page applications for DNA assembly\nand synthetic biology: restriction digest design, cloning simulation,\nsequence optimization, and more.\n\n")])]),e._m(4),s("project",{attrs:{title:"DNA CHISEL",subtitle:"A versatile sequence optimizer",img:"/static/imgs/logos/dnachisel.png",source:"https://github.com/Edinburgh-Genome-Foundry/DnaChisel",docs:"https://edinburgh-genome-foundry.github.io/DnaChisel/index.html",demo:"http://cuba.genomefoundry.org/#/sculpt-a-sequence"}},[s("div",{slot:"summary"},[e._v("Python library to optimize a sequence's nucleotides with respect to\nconstraints and objectives. DNA Chisel allows to provide specifications as\nGenbank features, and to define new constraints or objectives via scripts.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/dfv.png",title:"DNA Features Viewer",subtitle:"Display DNA features from Genbank etc.",source:"https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer",docs:"https://edinburgh-genome-foundry.github.io/DnaFeaturesViewer"}},[s("div",{slot:"summary"},[e._v("Customizable library to produce plots of sequence annotations (e.g. from\nGenbank). Easily customizable to highlight or hide certain features, it\ncan produce figures or simple web-based interactive plots.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/caravagene.png",title:"CARAVEGENE",subtitle:"PDF plots of genetic assemblies",source:"https://github.com/Edinburgh-Genome-Foundry/Caravagene"}},[s("div",{slot:"summary"},[e._v("Python library for generating PDF reports of DNA assembly plots. The renderer\nuses HTML/CSS, allowing for good esthetics in many scenarios. Allows for\nvarious annotations and highlighting. Used at the Foundry to communicate\ndesign ideas with customers.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/visual-sbol-css.png",title:"Visual SBOL CSS",subtitle:"The super-easy way to plot SBOL constructs in webpages",source:"https://github.com/Edinburgh-Genome-Foundry/SBOL-Visual-CSS",docs:"https://edinburgh-genome-foundry.github.io/SBOL-Visual-CSS/",demo:"https://edinburgh-genome-foundry.github.io/SBOL-Visual-CSS/examples/drag_and_drop_construct_editor.html"}},[s("div",{slot:"summary"},[e._v("CSS library for displaying DNA constructs using the visual SBOL notation.\nSmall and self-contained, it can be used in webpages, emails, HTML-based\nPDF reports, etc.\n\n")])]),e._m(5),s("project",{attrs:{title:"DNA CAULDRON",subtitle:"A cloning simulator for synthetic biology",img:"/static/imgs/logos/dnacauldron.png",source:"https://github.com/Edinburgh-Genome-Foundry/DnaCauldron",docs:"https://edinburgh-genome-foundry.github.io/DnaCauldron/",demo:"http://cuba.genomefoundry.org/#/simulate_gg_assemblies"}},[s("div",{slot:"summary"},[e._v("Python library to simulate restriction-based assembly operations\n(Golden Gate, BASIC). Supports simple and combinatorial assemblies, and\nconserves annotations in the final sequence. Also enables the autoselection\nof parts connectors.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/plateo.png",title:"PLATEO",subtitle:"Parsers and simulations for lab automation",source:"https://github.com/Edinburgh-Genome-Foundry/Plateo",docs:"https://edinburgh-genome-foundry.github.io/Plateo/"}},[s("div",{slot:"summary"},[e._v("Plateo is a Python library to implements parsers and file generators to\ninterface with many robots for biolab automation. Read microplate\ninformation (including experimental data) from many file formats, write\nreports, generate and simulate picklists.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/geneblocks.png",title:"GENEBLOCKS",subtitle:"Find common segments between DNA sequences",source:"https://github.com/Edinburgh-Genome-Foundry/Geneblocks"}},[s("div",{slot:"summary"},[e._v("Python library for locating which segments are common to a set of sequences.\nUsed in various project to optimize BLAST, cloning strategies, or simply\nfor making sense of unannotated sequences.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/taskpacker.png",title:"TASKPACKER",subtitle:"A generic scheduler for Python",source:"https://github.com/Edinburgh-Genome-Foundry/TaskPacker",docs:"https://edinburgh-genome-foundry.github.io/Taskpacker/"}},[s("div",{slot:"summary"},[e._v("Python project to model tasks and processes and optimize the schedules of\nrepetitive processes in order to predict factory throughputs.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/bandwagon.png",title:"BANDWAGON",subtitle:"Simulate and display gel simulations",source:"https://github.com/Edinburgh-Genome-Foundry/Bandwagon",docs:"https://edinburgh-genome-foundry.github.io/Bandwagon",demo:"http://cuba.genomefoundry.org/#/predict-digests"}},[s("div",{slot:"summary"},[e._v("Python library to simulate DNA digestion by restriction enzymes and plot\ndigestion patterns. Useful for prediciting experimental results or for\ndisplaying results from digital fragment analyzers.\n")])]),e._m(6),s("project",{attrs:{img:"/static/imgs/logos/proglog.png",title:"Proglog",subtitle:"A versatile progress logger for Python",docs:"http://edinburgh-genome-foundry.github.io/proglog/",source:"https://github.com/Edinburgh-Genome-Foundry/proglog"}},[s("div",{slot:"summary"},[e._v("Proglog is used as a unified progress logger in most computational\nprojects of the EGF. It enables to display progress in console error bars,\nHTML error bars for the IPython notebook, or to send progress data to\ndistant servers.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/flametree.png",title:"Flametree",subtitle:"Zip and folder operations made easy",source:"https://github.com/Edinburgh-Genome-Foundry/Flametree"}},[s("div",{slot:"summary"},[e._v("Python library to simplify file operations, in particular when zip archives\nare involved. Largely used on the EGF web servers for the creation of zip\narchives "),s("i",[e._v("in memory")]),e._v(".\n")])]),s("project",{attrs:{img:"/static/imgs/logos/bioprinter.png",title:"Bioprinter",subtitle:"Print pictures using colored micro-organisms !",docs:"http://edinburgh-genome-foundry.github.io/bioprinter/",source:"https://github.com/Edinburgh-Genome-Foundry/bioprinter"}},[s("div",{slot:"summary"})]),e._m(7),e._m(8),s("myfooter")],1)},staticRenderFns:[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("h1",[e._v("The Software Suite of the "),s("br"),e._v(" Edinburgh Genome Foundry")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("The "),s("a",{attrs:{target:"_blank",href:"http://genomefoundry.org/#/"}},[e._v("Genome Foundry")]),e._v("\nis an academic facility running a highly automated robotic setup for DNA\nautomation. The software team develops computational libraries\nand web applications for DNA Assembly, Lab Automation, and\nSynthetic Biology.")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("Most of our software is open-source and released\n"),s("a",{attrs:{href:"https://github.com/Edinburgh-Genome-Foundry"}},[e._v("on Github")]),e._v(". This page\ngathers some of our projects for "),s("a",{attrs:{href:"#design"}},[e._v("DNA Design")]),e._v(",\n"),s("a",{attrs:{href:"#manufacturing"}},[e._v("Manufacturing")]),e._v(", "),s("a",{attrs:{href:"#interfaces"}},[e._v("Interfaces")]),e._v(", "),s("a",{attrs:{href:"#other"}},[e._v("etc.")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"category",attrs:{id:"design"}},[e._v("Interfaces "),s("hr")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"category",attrs:{id:"design"}},[e._v("Design "),s("hr")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"category",attrs:{id:"manufacturing",name:"manufacturing"}},[e._v("Manufacturing "),s("hr")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"category"},[e._v("Misc. libraries "),s("hr")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"category"},[e._v("Other Repos "),s("hr")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[s("ul",[s("li",[s("p",[s("a",{attrs:{href:"https://github.com/Edinburgh-Genome-Foundry/egf-website-vue.js"}},[e._v("The sources of the EGF website")]),e._v(". Written using Vue.JS.")])]),e._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://github.com/Edinburgh-Genome-Foundry/egf-slides"}},[e._v("Web slides about the EGF")]),e._v(". Come see what we do !")])]),e._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://github.com/Edinburgh-Genome-Foundry/codon-usage-tables"}},[e._v("Codon usage tables")]),e._v(". Always practical to have these at hand.")])]),e._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://github.com/Edinburgh-Genome-Foundry/igem-registry-downloader"}},[e._v("Scripts to download the iGEM database")]),e._v(". Useful until the iGEM API gets updated.")])])])])}]}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"project-div"},[s("img",{staticClass:"project-logo",attrs:{src:e.img}}),e.title?s("h3",{staticClass:"title"},[e._v(e._s(e.title))]):e._e(),e.title?s("h4",{staticClass:"subtitle"},[e._v(e._s(e.subtitle))]):e._e(),s("div",{staticClass:"links"},[e.website?s("a",{staticClass:"website",attrs:{href:e.website}},[e._v("Website")]):e._e(),e.demo?s("a",{staticClass:"demo",attrs:{href:e.demo}},[e._v("Demo")]):e._e(),e.paper?s("a",{staticClass:"paper",attrs:{href:e.docs}},[e._v("Paper")]):e._e(),e.docs?s("a",{staticClass:"docs",attrs:{href:e.docs}},[e._v("Docs")]):e._e(),e.source?s("a",{staticClass:"source",attrs:{href:e.source}},[e._v("Source")]):e._e()]),s("p",{staticClass:"summary"},[e._t("summary")],2)])},staticRenderFns:[]}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"app"}},[s("router-view")],1)},staticRenderFns:[]}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},staticRenderFns:[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("footer",[s("div",{staticClass:"container"}),e._v("© Edinburgh Genome Foundry, 2017 "),s("br"),e._v("\nThe EGF is supported by the Research Councils UK and University of Edinburgh")])}]}}],[4]);