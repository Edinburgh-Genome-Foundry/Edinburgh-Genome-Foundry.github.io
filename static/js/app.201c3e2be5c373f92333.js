webpackJsonp([0],[,,function(e,t,s){"use strict";var o=s(1),n=s.n(o),i=s(23),r=s(15),a=s.n(r);n.a.use(i.a),t.a=new i.a({mode:"history",routes:[{path:"/",name:"Portfolio",component:a.a}]})},function(e,t,s){s(12);var o=s(0)(s(5),s(21),null,null);e.exports=o.exports},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=s(1),n=s.n(o),i=s(3),r=s.n(i),a=s(2);new n.a({el:"#app",router:a.a,template:"<App/>",components:{App:r.a}})},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"app"}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=s(16),n=s.n(o),i=s(14),r=s.n(i),a=s(17),l=s.n(a);t.default={name:"hello",data:function(){},components:{project:n.a,myfooter:r.a,weblinks:l.a}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={props:{img:null,title:null,subtitle:null,source:null,docs:null,demo:null,paper:null,website:null}}},function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"web-links",props:{emailSubject:{default:function(){return null}},tweetMessage:{default:function(){return null}},tweetUrl:{default:function(){return""}},tweetHashtags:{default:""}},data:{},computed:{emailHref:function(){return"mailto:egf-software@ed.ac.uk?&cc=hille.tekotte@ed.ac.uk, valentin.zulkower@ed.ac.uk&body=Hello EGF team !&subject="+this.emailSubject},twitterHref:function(){return"https://twitter.com/intent/tweet?hashtags=synbio,software&text="+this.tweetMessage+"&url="+this.tweetUrl+"&via=EdinGenFoundry&hashtags="+this.tweetHashtags}}}},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,s){s(13);var o=s(0)(null,s(22),"data-v-fa324e66",null);e.exports=o.exports},function(e,t,s){s(9);var o=s(0)(s(6),s(18),"data-v-537c2f86",null);e.exports=o.exports},function(e,t,s){s(11);var o=s(0)(s(7),s(20),"data-v-a1f893f2",null);e.exports=o.exports},function(e,t,s){s(10);var o=s(0)(s(8),s(19),"data-v-90842f12",null);e.exports=o.exports},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",[s("img",{staticClass:"title-logo",attrs:{src:"/static/imgs/logos/egf-codon.svg"}}),e._m(0),s("weblinks",{attrs:{emailSubject:"[EGF-Codons] Feedback on the EGF software",tweetMessage:"EGF Codons: free software for DNA design, assembly, and more.",tweetUrl:"https://edinburgh-genome-foundry.github.io/",tweetHashtags:"synbio, software"}}),e._m(1),e._m(2),e._m(3),s("project",{attrs:{title:"DNA CHISEL",subtitle:"A versatile sequence optimizer",img:"/static/imgs/logos/dnachisel.png",source:"https://github.com/Edinburgh-Genome-Foundry/DnaChisel",docs:"https://edinburgh-genome-foundry.github.io/DnaChisel/index.html",demo:"http://cuba.genomefoundry.org/sculpt-a-sequence"}},[s("div",{slot:"summary"},[e._v("Python library to optimize a sequence's nucleotides with respect to\nconstraints and objectives. DNA Chisel allows to provide specifications as\nGenbank features, and to define new constraints or objectives via scripts.\n")])]),s("project",{attrs:{title:"Golden Hinges",subtitle:"Restriction overhang designer",img:"/static/imgs/logos/goldenhinges.png",source:"https://github.com/Edinburgh-Genome-Foundry/GoldenHinges",docs:"https://edinburgh-genome-foundry.github.io/GoldenHinges/index.html",demo:"http://cuba.genomefoundry.org/design-overhangs"}},[s("div",{slot:"summary"},[e._v("Python library to find collections of compatible overhangs for Type-2S\nrestriction-based assembly, or decompose\na DNA sequence into fragments with compatible overhangs for scar-less\nDNA assembly. Can also suggest minimal edits in the sequence to allow\nsuch assembly.\n\n")])]),s("project",{attrs:{img:"/static/imgs/logos/dfv.png",title:"DNA Features Viewer",subtitle:"Display DNA features from Genbank etc.",source:"https://github.com/Edinburgh-Genome-Foundry/DnaFeaturesViewer",docs:"https://edinburgh-genome-foundry.github.io/DnaFeaturesViewer"}},[s("div",{slot:"summary"},[e._v("Customizable library to produce plots of sequence annotations (e.g. from\nGenbank). Easily customizable to highlight or hide certain features, it\ncan produce figures or simple web-based interactive plots.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/caravagene.png",title:"CARAVAGENE",subtitle:"PDF plots of genetic assemblies",source:"https://github.com/Edinburgh-Genome-Foundry/Caravagene",docs:"https://edinburgh-genome-foundry.github.io/Caravagene/",demo:"http://cuba.genomefoundry.org/sketch_constructs"}},[s("div",{slot:"summary"},[e._v("Python library for generating PDF reports of DNA assembly plots. The renderer\nuses HTML/CSS, allowing for good esthetics in many scenarios. Allows for\nvarious annotations and highlighting. Used at the Foundry to communicate\ndesign ideas with customers.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/visual-sbol-css.png",title:"Visual SBOL CSS",subtitle:"The super-easy way to plot SBOL constructs in webpages",source:"https://github.com/Edinburgh-Genome-Foundry/SBOL-Visual-CSS",docs:"https://edinburgh-genome-foundry.github.io/SBOL-Visual-CSS/",demo:"https://edinburgh-genome-foundry.github.io/SBOL-Visual-CSS/examples/drag_and_drop_construct_editor.html"}},[s("div",{slot:"summary"},[e._v("CSS library for displaying DNA constructs using the visual SBOL notation.\nSmall and self-contained, it can be used in webpages, emails, HTML-based\nPDF reports, etc.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/emma_db.png",title:"EMMA DB",subtitle:"Web repository for the EMMA standard",website:"https://design.emmadb.genomefoundry.org"}},[s("div",{slot:"summary"},[e._v("This in-development project features a database of parts (powered by\nJBEI's ICE) connected to a design tool specifically made for the EMMA\nassembly standard.\n\n\n\n")])]),e._m(4),s("project",{attrs:{title:"DNA CAULDRON",subtitle:"A cloning simulator for synthetic biology",img:"/static/imgs/logos/dnacauldron.png",source:"https://github.com/Edinburgh-Genome-Foundry/DnaCauldron",docs:"https://edinburgh-genome-foundry.github.io/DnaCauldron/",demo:"http://cuba.genomefoundry.org/simulate_gg_assemblies"}},[s("div",{slot:"summary"},[e._v("Python library to simulate restriction-based assembly operations\n(Golden Gate, BASIC). Supports simple and combinatorial assemblies, and\nconserves annotations in the final sequence. Also enables the autoselection\nof parts connectors.\n")])]),s("project",{attrs:{title:"DNA Weaver",subtitle:"A route planner for DNA assembly",img:"/static/imgs/logos/dnaweaver.png",source:"https://github.com/Edinburgh-Genome-Foundry/DnaWeaver"}},[s("div",{slot:"summary"},[e._v("DNA Weaver computes optimal assembly strategies for long sequences of\narbitrary DNA. It supports several assembly methods (Golden Gate assembly,\nType-2S restriction enzymes, etc.) and can compare several sources of DNA\nsuch as commercial providers or constructs.\n")])]),s("project",{attrs:{title:"BandWitch",subtitle:"Restriction digests assistant",img:"/static/imgs/logos/bandwitch.png",source:"https://github.com/Edinburgh-Genome-Foundry/BandWitch",docs:"https://edinburgh-genome-foundry.github.io/BandWitch/",demo:"http://cuba.genomefoundry.org/digestion_selector"}},[s("div",{slot:"summary"},[e._v("Python library to automatically select the best enzymes to either validate\nor identify a batch of genetic assemblies. Also provides report generation\nfor the validation or identification of assemblies from fragment analyzis\ndata\n")])]),s("project",{attrs:{img:"/static/imgs/logos/plateo.png",title:"PLATEO",subtitle:"Parsers and simulators for lab automation",source:"https://github.com/Edinburgh-Genome-Foundry/Plateo",docs:"https://edinburgh-genome-foundry.github.io/Plateo/"}},[s("div",{slot:"summary"},[e._v("Plateo is a Python library to implements parsers and file generators to\ninterface with many robots for biolab automation. Read microplate\ninformation (including experimental data) from many file formats, write\nreports, generate and simulate picklists.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/primavera.png",title:"Primavera",subtitle:"Primer-based verification assistant"}},[s("div",{slot:"summary"},[e._v("Python library for primer selection and data analysis for assembly\nverification. Primavera can suggest an optimal set of primers to]\nsequence-verify a multi-part construct at all junctions. It can\nalso consolidate a batch of sequencing reads into a per-construct report.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/geneblocks.png",title:"GENEBLOCKS",subtitle:"Find common segments between DNA sequences",demo:"http://cuba.genomefoundry.org/find-common-blocks",source:"https://github.com/Edinburgh-Genome-Foundry/Geneblocks"}},[s("div",{slot:"summary"},[e._v("Python library for locating which segments are common to a set of sequences.\nUsed in various project to optimize BLAST, cloning strategies, or simply\nfor making sense of unannotated sequences.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/bandwagon.png",title:"BANDWAGON",subtitle:"Band patterns plotter and simulator",source:"https://github.com/Edinburgh-Genome-Foundry/Bandwagon",docs:"https://edinburgh-genome-foundry.github.io/Bandwagon",demo:"http://cuba.genomefoundry.org/predict-digests"}},[s("div",{slot:"summary"},[e._v("Python library to simulate DNA digestion by restriction enzymes and plot\ndigestion patterns. Useful for prediciting experimental results or for\ndisplaying results from digital fragment analyzers.\n\n")])]),s("project",{attrs:{title:"EGF CUBA",subtitle:"Web Collection of Useful Bio Apps",img:"/static/imgs/logos/cuba.png",source:"https://github.com/Edinburgh-Genome-Foundry/CUBA",website:"http://cuba.genomefoundry.org"}},[s("div",{slot:"summary"},[e._v("Collection of publicly available one-page applications for DNA assembly\nand synthetic biology: restriction digest design, cloning simulation,\nsequence optimization, and more.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/smart_ass.png",title:"Smart Assembly",subtitle:"Web apps for Foundry operators"}},[s("div",{slot:"summary"},[e._v("Collection of tailor-made web apps to help the Foundry operators through\nDNA assembly projects: automatic\npicklist generation, enzyme selection, and sequence validation for batches\nof DNA assemblies, communication between computers, parts repository browsing,\netc. This project is not currently public (ask us about it !).\n")])]),s("project",{attrs:{img:"/static/imgs/logos/file_manager.png",title:"The EGF File Manager",subtitle:"Because USB sticks are not fun"}},[s("div",{slot:"summary"},[e._v("Server configuration to transmit files between personal computers, web\napplications, and the Foundry's robots, in a traceable and secure way.\nThis project is not currently public (ask us about it !).\n")])]),s("project",{attrs:{img:"/static/imgs/logos/taskpacker.png",title:"TASKPACKER",subtitle:"A generic scheduler for Python",source:"https://github.com/Edinburgh-Genome-Foundry/TaskPacker",docs:"https://edinburgh-genome-foundry.github.io/Taskpacker/"}},[s("div",{slot:"summary"},[e._v("Python project to model tasks and processes and optimize the schedules of\nrepetitive processes in order to predict factory throughputs.\n\n\n")])]),e._m(5),s("project",{attrs:{img:"/static/imgs/logos/screepy.png",title:"Screepy",subtitle:"Screening out the creepy",source:"https://github.com/Edinburgh-Genome-Foundry/Bandwagon",docs:"https://edinburgh-genome-foundry.github.io/Bandwagon",demo:"http://cuba.genomefoundry.org/predict-digests"}},[s("div",{slot:"summary"},[e._v("Screepy provides a framework to run multiple pathogenicity tests on DNA\nsequences prior to synthesis, and compile the screen results in extensive\nreports for traceability. The code is not public (but you can ask us about it !)\n")])]),s("project",{attrs:{img:"/static/imgs/logos/proglog.png",title:"Proglog",subtitle:"A versatile progress logger for Python",docs:"http://edinburgh-genome-foundry.github.io/proglog/",source:"https://github.com/Edinburgh-Genome-Foundry/proglog"}},[s("div",{slot:"summary"},[e._v("Proglog is used as a unified progress logger in most computational\nprojects of the EGF. It enables to display progress in console error bars,\nHTML error bars for the IPython notebook, or to send progress data to\ndistant servers.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/flametree.png",title:"Flametree",subtitle:"Zip and folder operations made easy",source:"https://github.com/Edinburgh-Genome-Foundry/Flametree"}},[s("div",{slot:"summary"},[e._v("Python library to simplify file operations, in particular when zip archives\nare involved. Largely used on the EGF web servers for the creation of zip\narchives "),s("i",[e._v("in memory")]),e._v(".\n")])]),s("project",{attrs:{img:"/static/imgs/logos/cab.png",title:"CAB",subtitle:"A friendly boilerplate for computational apps",docs:"http://edinburgh-genome-foundry.github.io/proglog/",source:"https://github.com/Edinburgh-Genome-Foundry/proglog"}},[s("div",{slot:"summary"},[e._v("CAB provides an easy way to deploy websites where users can fill\na form and get computational jobs done, and is used accross several EGF\nwebsites (CUBA, SmartAss. EMMA-DB). Built with VueJS on the frontend, Python/Django\non the backend, and Docker for integration.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/bioprinter.png",title:"BioPrinter",subtitle:"Print pictures using colored micro-organisms !",docs:"http://edinburgh-genome-foundry.github.io/bioprinter/",source:"https://github.com/Edinburgh-Genome-Foundry/bioprinter"}},[s("div",{slot:"summary"},[e._v("Python module to "),s("i",[e._v("print")]),e._v(" living art pictures using pigmented yeast or\nbacteria. After an original project by Mike Shen (Boeke Lab).\n")])]),s("project",{attrs:{title:"Other Github repositories",subtitle:"...too small to have a logo"}},[s("div",{staticClass:"other-repos",slot:"summary"},[s("p",[s("a",{attrs:{href:"https://github.com/Edinburgh-Genome-Foundry/egf-website-vue.js"}},[e._v("The sources of the EGF website")]),e._v(".")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/Edinburgh-Genome-Foundry/egf-slides"}},[e._v("Web slides about the EGF")])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/Edinburgh-Genome-Foundry/codon-usage-tables"}},[e._v("A collection of coder-friendly codon usage tables")]),e._v(".")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/Edinburgh-Genome-Foundry/igem-registry-downloader"}},[e._v("Scripts to download the iGEM database")]),e._v(".")])])]),e._m(6),s("project",{attrs:{img:"/static/imgs/logos/leaf_lims.png",title:"LEAF LIMS",subtitle:"A LIMS for Synthetic Biology",docs:"https://leaflims.github.io/",source:"https://github.com/LeafLIMS/LeafLIMS",paper:"http://pubs.acs.org/doi/abs/10.1021/acssynbio.7b00212"}},[s("div",{slot:"summary"},[e._v("This Synbio-focused Laboratory information Management System was developed\nby GeneMill (Liverpool) in collaboration with the Earlham Institute and the\nEdinburgh Genome Foundry, who provided initial input and testing.\n")])]),s("project",{attrs:{img:"/static/imgs/logos/genetic_constructor.png",title:"Autodesk Genetic Constructor",subtitle:"A web-based toolkit for synthetic biology",website:"https://geneticconstructor.lifesciences.autodesk.com/",paper:"http://pubs.acs.org/doi/full/10.1021/acssynbio.7b00236"}},[s("div",{slot:"summary"},[e._v("This sequence designer with modern features such as nested constructs,\ntemplates, and the possibility to browse external part repositories, was started in 2015 as a\ncollaboration between Autodesk and the EGF. We provided initial input in\nspecifications, software design, and a web API to order directly\nfrom the EGF via Genetic Constructor.\n")])]),s("myfooter")],1)},staticRenderFns:[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("h1",[e._v("The Software Suite of the "),s("br"),e._v(" Edinburgh Genome Foundry")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("The "),s("a",{attrs:{target:"_blank",href:"http://genomefoundry.org/"}},[e._v("Genome Foundry")]),e._v("\nis an academic facility running a highly automated robotic setup for DNA\nassembly automation. The software team develops computational libraries\nand web applications for DNA Assembly, Lab Automation, and\nSynthetic Biology. Most of our software is open-source and released\n"),s("a",{attrs:{target:"_blank",href:"https://github.com/Edinburgh-Genome-Foundry"}},[e._v("on Github")]),e._v(".\n\n")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"header-links"},[s("h3",[e._v("Categories")]),s("a",{attrs:{href:"#design"}},[e._v("Design")]),s("a",{attrs:{href:"#build"}},[e._v("Build")]),s("a",{attrs:{href:"#other"}},[e._v("Other")]),s("a",{attrs:{href:"#collaborations"}},[e._v("Collaborations")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"category",attrs:{id:"design"}},[e._v("Design "),s("hr")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"category",attrs:{id:"build",name:"manufacturing"}},[e._v("Build "),s("hr")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"category",attrs:{id:"other"}},[e._v("Other Software "),s("hr")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"category",attrs:{id:"collaborations"}},[e._v("Collaborations "),s("hr")])}]}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"weblinks-bar"},[e.tweetMessage?s("a",{staticClass:"tweet",attrs:{href:e.twitterHref}},[s("img",{attrs:{src:"/static/imgs/icons/twitter.svg"}}),e._v(" Tweet")]):e._e(),e.emailSubject?s("a",{staticClass:"email",attrs:{href:e.emailHref}},[s("img",{attrs:{src:"/static/imgs/icons/email.svg"}}),e._v(" Send feedback")]):e._e()])},staticRenderFns:[]}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"project-div"},[s("img",{staticClass:"project-logo",attrs:{src:e.img}}),e.title?s("h3",{staticClass:"title"},[e._v(e._s(e.title))]):e._e(),e.title?s("h4",{staticClass:"subtitle"},[e._v(e._s(e.subtitle))]):e._e(),s("div",{staticClass:"links"},[e.website?s("a",{staticClass:"website",attrs:{href:e.website}},[e._v("Website")]):e._e(),e.demo?s("a",{staticClass:"demo",attrs:{href:e.demo}},[e._v("Demo")]):e._e(),e.paper?s("a",{staticClass:"paper",attrs:{href:e.paper}},[e._v("Paper")]):e._e(),e.docs?s("a",{staticClass:"docs",attrs:{href:e.docs}},[e._v("Docs")]):e._e(),e.source?s("a",{staticClass:"source",attrs:{href:e.source}},[e._v("Source")]):e._e()]),s("p",{staticClass:"summary"},[e._t("summary")],2)])},staticRenderFns:[]}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"app"}},[s("router-view")],1)},staticRenderFns:[]}},function(e,t){e.exports={render:function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},staticRenderFns:[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("footer",[s("div",{staticClass:"container"}),e._v("© Edinburgh Genome Foundry, 2017 "),s("br"),e._v("\nThe EGF is supported by the Research Councils UK and University of Edinburgh")])}]}}],[4]);